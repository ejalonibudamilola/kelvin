package com.osm.gnl.ippms.ogsg.controllers.report.utility;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import com.osm.gnl.ippms.ogsg.constants.IConstants;
import com.osm.gnl.ippms.ogsg.domain.report.ReportGeneratorBean;
import com.osm.gnl.ippms.ogsg.generic.domain.BusinessCertificate;
import com.osm.gnl.ippms.ogsg.payroll.utils.IppmsUtils;
import com.osm.gnl.ippms.ogsg.payslip.beans.EmpDeductMiniBean;
import com.osm.gnl.ippms.ogsg.payslip.beans.EmpGarnMiniBean;
import com.osm.gnl.ippms.ogsg.payslip.beans.EmployeePayMiniBean;
import com.osm.gnl.ippms.ogsg.report.beans.NamedEntity;
import lombok.extern.java.Log;
import org.apache.commons.codec.binary.Base64;
import org.springframework.util.ResourceUtils;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
@Log
public class SinglePaySlipPdfGenerator {


    private final String sixSpaces = "      ";
    private static SinglePaySlipPdfGenerator instance;
    //Makes it into a Singleton Class...

    private SinglePaySlipPdfGenerator(){}

    public static SinglePaySlipPdfGenerator getInstance(){
        if(instance == null)
            instance = new SinglePaySlipPdfGenerator();

        return instance;

    }
    public void getPdf(HttpServletResponse response, ReportGeneratorBean rt, HttpServletRequest request){

        LocalDate currentDate = LocalDate.now();

        BaseColor baseColor = new BaseColor(229, 241, 241);


        DateFormat dateFormat = new SimpleDateFormat("hh.mm aa");
        String currentTime = dateFormat.format(new Date());
        Rectangle pageSize = new Rectangle(PageSize.A4);
        pageSize.setBackgroundColor(baseColor);
        Document myPdfReport = new Document(pageSize);
        myPdfReport.setMargins(6, 6, 6, 6);
        try {
//            File currDir = new File(".");
//            String path = currDir.getAbsolutePath();
//            String fileLocation = path.substring(0, path.length() - 1) + rt.getReportTitle() + ".pdf";

            File currDir = new File(request.getServletContext().getRealPath(File.separator)+rt.getReportTitle()+".pdf");
            String fileLocation = currDir.getPath();

            PdfWriter pdfwriter = PdfWriter.getInstance(myPdfReport, new FileOutputStream(fileLocation));

            myPdfReport.open();
              Font italic = new Font(Font.FontFamily.HELVETICA, 8, Font.ITALIC, BaseColor.RED);
            Font boldFont = new Font(Font.FontFamily.HELVETICA, 14f, Font.BOLD);
            Font smallHeader = new Font(Font.FontFamily.HELVETICA, 12f, Font.BOLD);
            Font normal = new Font(Font.FontFamily.HELVETICA, 15f, Font.NORMAL);


            PdfPTable nameTable1 = new PdfPTable(3);
            PdfPCell cell0 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell0.setBackgroundColor(baseColor);
            cell0.setBorder(Rectangle.NO_BORDER);
            nameTable1.addCell(cell0);

            cell0 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell0.setBackgroundColor(baseColor);
            cell0.setBorder(Rectangle.NO_BORDER);
            nameTable1.addCell(cell0);

            cell0 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell0.setBackgroundColor(baseColor);
            cell0.setBorder(Rectangle.NO_BORDER);
            nameTable1.addCell(cell0);

            myPdfReport.add(nameTable1);

            PdfPTable nameTable2 = new PdfPTable(3);
            PdfPCell cell1 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell1.setBackgroundColor(baseColor);
            cell1.setBorder(Rectangle.NO_BORDER);
            nameTable2.addCell(cell1);

            cell1 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell1.setBackgroundColor(baseColor);
            cell1.setBorder(Rectangle.NO_BORDER);
            nameTable2.addCell(cell1);

            cell1 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell1.setBackgroundColor(baseColor);
            cell1.setBorder(Rectangle.NO_BORDER);
            nameTable2.addCell(cell1);

            nameTable2.setSpacingBefore(15f);

            myPdfReport.add(nameTable2);



            PdfPTable nameTable = new PdfPTable(3);
            PdfPCell cell = new PdfPCell(new Phrase("", normal));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            cell = new PdfPCell(new Phrase("Generated By GNL Systems IPPMS - "+currentDate+" "+currentTime, boldFont));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setNoWrap(true);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            cell = new PdfPCell(new Phrase("", normal));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            nameTable.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*9));
            nameTable.setLockedWidth(true);

            myPdfReport.add(nameTable);

            PdfPTable outerTable = new PdfPTable(1);


            drawTableLogo(rt.getEmployeePayMiniBean(), normal, boldFont, myPdfReport, rt.getBusinessCertificate(), currentDate, outerTable, smallHeader);


            payAndAllowancesTable(rt.getEmployeePayMiniBean(), normal, boldFont, myPdfReport, rt.getBusinessCertificate(), outerTable, baseColor, italic);

            //adding table headers

           // PdfPTable new_Table = null;
           // Boolean addOne;

            onEndPage(pdfwriter, myPdfReport, rt.getWatermark(), rt.getBusinessCertificate());

            myPdfReport.close();

            FileInputStream baos = new FileInputStream(fileLocation);

            response.setHeader("Expires", "0");
            response.setHeader("Cache-Control", "must-revalidate, post-check=0, pre-check=0");
            response.setHeader("Pragma", "public");
            response.setContentType("application/pdf");
            response.setHeader("Content-Disposition", "attachment; filename=" + rt.getReportTitle() + ".pdf");

            if (IppmsUtils.isNull(rt.isOutputInd()) || rt.isOutputInd()) {
                OutputStream os  = response.getOutputStream();
                byte[] buffer = new byte[8192];
                int bytesRead;

                while ((bytesRead = baos.read(buffer)) != -1) {
                    os.write(buffer, 0, bytesRead);
                }


                try {
                    os.close();
                } catch (Exception wEx) {
                    wEx.printStackTrace();
                }
            }
            } catch(IOException | DocumentException ex){
                ex.printStackTrace();
            }



    }
    public void getPdfAsFile(HttpServletResponse response, HttpServletRequest request, ReportGeneratorBean rt){

        LocalDate currentDate = LocalDate.now();

        BaseColor baseColor = new BaseColor(229, 241, 241);
        List<String> files = new ArrayList<>();

        DateFormat dateFormat = new SimpleDateFormat("hh.mm aa");
        String currentTime = dateFormat.format(new Date());
        Rectangle pageSize = new Rectangle(PageSize.A4);
        pageSize.setBackgroundColor(baseColor);
        Document myPdfReport = new Document(pageSize);
        myPdfReport.setMargins(6, 6, 6, 6);
        try {
//            File currDir = new File(".");
//            String path = currDir.getAbsolutePath();
//            String fileLocation = path.substring(0, path.length() - 1) + rt.getReportTitle() + ".pdf";
            File currDir = new File(request.getServletContext().getRealPath(File.separator)+rt.getReportTitle()+".pdf");
            String fileLocation = currDir.getPath();
            //String fileLocation = path.substring(0, path.length() - 1) +rt.getReportTitle()+".pdf";

            PdfWriter pdfwriter = PdfWriter.getInstance(myPdfReport, new FileOutputStream(fileLocation));

            myPdfReport.open();

            Font italic = new Font(Font.FontFamily.HELVETICA, 8, Font.ITALIC, BaseColor.RED);
            Font boldFont = new Font(Font.FontFamily.HELVETICA, 14f, Font.BOLD);
            Font smallHeader = new Font(Font.FontFamily.HELVETICA, 12f, Font.BOLD);
            Font normal = new Font(Font.FontFamily.HELVETICA, 15f, Font.NORMAL);



            PdfPTable nameTable = new PdfPTable(3);
            PdfPCell cell = new PdfPCell(new Phrase("", normal));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            cell = new PdfPCell(new Phrase("Generated By GNL Systems IPPMS - "+currentDate+" "+currentTime, boldFont));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setNoWrap(true);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            cell = new PdfPCell(new Phrase("", normal));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            nameTable.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*9));
            nameTable.setLockedWidth(true);

            myPdfReport.add(nameTable);

            PdfPTable outerTable = new PdfPTable(1);

            drawTableLogo(rt.getEmployeePayMiniBean(), normal, boldFont, myPdfReport, rt.getBusinessCertificate(), currentDate, outerTable, smallHeader);


            payAndAllowancesTable(rt.getEmployeePayMiniBean(), normal, boldFont, myPdfReport, rt.getBusinessCertificate(), outerTable, baseColor, italic);

            //adding table headers

          //  PdfPTable new_Table = null;
           // Boolean addOne;

            onEndPage(pdfwriter, myPdfReport, rt.getWatermark(), rt.getBusinessCertificate());

            myPdfReport.close();

            FileInputStream baos = new FileInputStream(fileLocation);


            response.setHeader("Expires", "0");
            response.setHeader("Cache-Control", "must-revalidate, post-check=0, pre-check=0");
            response.setHeader("Pragma", "public");
            response.setContentType("application/pdf");
            response.setHeader("Content-Disposition", "attachment; filename=" + rt.getReportTitle() + ".pdf");

            if (IppmsUtils.isNull(rt.isOutputInd()) || rt.isOutputInd()) {
                OutputStream os  = response.getOutputStream();
                byte[] buffer = new byte[8192];
                int bytesRead;

                while ((bytesRead = baos.read(buffer)) != -1) {
                    os.write(buffer, 0, bytesRead);
                }


                try {
                    os.close();
                } catch (Exception wEx) {

                }
            }
        } catch(IOException | DocumentException ex){

            }
    }

    public File getPdfAsFile(ReportGeneratorBean rt, HttpServletRequest request){

        LocalDate currentDate = LocalDate.now();
        BaseColor baseColor = new BaseColor(229, 241, 241);

        DateFormat dateFormat = new SimpleDateFormat("hh.mm aa");
        String currentTime = dateFormat.format(new Date());
        Rectangle pageSize = new Rectangle(PageSize.A4);
        pageSize.setBackgroundColor(baseColor);
        Document myPdfReport = new Document(pageSize);
        myPdfReport.setMargins(6, 6, 6, 6);

//        File currDir = new File(".");
//        String fileLocation = null;
        File currDir = new File(request.getServletContext().getRealPath(File.separator)+rt.getReportTitle()+".pdf");
        String path = currDir.getPath();
       // String

        String fileLocation = null;
        try {
//            String path = currDir.getAbsolutePath();

            fileLocation = path.substring(0, path.length() - 1) +rt.getReportTitle()+".pdf";
            PdfWriter pdfwriter = PdfWriter.getInstance(myPdfReport, new FileOutputStream(fileLocation));

            myPdfReport.open();
           // PdfFont bold = PdfFontFactory.createFont("Times-Bold");
            Font italic = new Font(Font.FontFamily.HELVETICA, 8, Font.ITALIC, BaseColor.RED);
            Font boldFont = new Font(Font.FontFamily.HELVETICA, 14f, Font.BOLD);
            Font smallHeader = new Font(Font.FontFamily.HELVETICA, 12f, Font.BOLD);
            Font normal = new Font(Font.FontFamily.HELVETICA, 15f, Font.NORMAL);
           // Font headingFont = new Font(Font.FontFamily.HELVETICA, 14);



            PdfPTable nameTable = new PdfPTable(3);
            PdfPCell cell = new PdfPCell(new Phrase("", normal));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            cell = new PdfPCell(new Phrase("Generated By GNL Systems IPPMS - "+currentDate+" "+currentTime, boldFont));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setNoWrap(true);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            cell = new PdfPCell(new Phrase("", normal));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            nameTable.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*9));
            nameTable.setLockedWidth(true);

            myPdfReport.add(nameTable);

            PdfPTable outerTable = new PdfPTable(1);

            drawTableLogo(rt.getEmployeePayMiniBean(), normal, boldFont, myPdfReport, rt.getBusinessCertificate(), currentDate, outerTable, smallHeader);


            payAndAllowancesTable(rt.getEmployeePayMiniBean(), normal, boldFont, myPdfReport, rt.getBusinessCertificate(), outerTable, baseColor, italic);

            //adding table headers

           // PdfPTable new_Table = null;
        //    Boolean addOne;

            onEndPage(pdfwriter, myPdfReport, rt.getWatermark(), rt.getBusinessCertificate());

            myPdfReport.close();

            




        } catch(IOException | DocumentException ex){

        }
        return new File(fileLocation);
    }

    public void getPdf(ReportGeneratorBean rt, String filePath, HttpServletResponse response){

        LocalDate currentDate = LocalDate.now();

        BaseColor baseColor = new BaseColor(229, 241, 241);


        DateFormat dateFormat = new SimpleDateFormat("hh.mm aa");
        String currentTime = dateFormat.format(new Date());
        Rectangle pageSize = new Rectangle(PageSize.A4);
        pageSize.setBackgroundColor(baseColor);
        Document myPdfReport = new Document(pageSize);
        myPdfReport.setMargins(6, 6, 6, 6);
        try {
//            File currDir = new File(".");
//            String path = currDir.getAbsolutePath();
//            String fileLocation = path.substring(0, path.length() - 1) + rt.getReportTitle() + ".pdf";
            String filename = filePath+rt.getReportTitle()+".pdf";
            File currDir = new File(filename);
            String fileLocation = currDir.getPath();

            PdfWriter pdfwriter = PdfWriter.getInstance(myPdfReport, new FileOutputStream(fileLocation));

            myPdfReport.open();
            Font italic = new Font(Font.FontFamily.HELVETICA, 8, Font.ITALIC, BaseColor.RED);
            Font boldFont = new Font(Font.FontFamily.HELVETICA, 14f, Font.BOLD);
            Font smallHeader = new Font(Font.FontFamily.HELVETICA, 12f, Font.BOLD);
            Font normal = new Font(Font.FontFamily.HELVETICA, 15f, Font.NORMAL);


            PdfPTable nameTable1 = new PdfPTable(3);
            PdfPCell cell0 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell0.setBackgroundColor(baseColor);
            cell0.setBorder(Rectangle.NO_BORDER);
            nameTable1.addCell(cell0);

            cell0 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell0.setBackgroundColor(baseColor);
            cell0.setBorder(Rectangle.NO_BORDER);
            nameTable1.addCell(cell0);

            cell0 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell0.setBackgroundColor(baseColor);
            cell0.setBorder(Rectangle.NO_BORDER);
            nameTable1.addCell(cell0);

            myPdfReport.add(nameTable1);

            PdfPTable nameTable2 = new PdfPTable(3);
            PdfPCell cell1 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell1.setBackgroundColor(baseColor);
            cell1.setBorder(Rectangle.NO_BORDER);
            nameTable2.addCell(cell1);

            cell1 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell1.setBackgroundColor(baseColor);
            cell1.setBorder(Rectangle.NO_BORDER);
            nameTable2.addCell(cell1);

            cell1 = new PdfPCell(new Phrase(IConstants.EMPTY_STR, normal));
            cell1.setBackgroundColor(baseColor);
            cell1.setBorder(Rectangle.NO_BORDER);
            nameTable2.addCell(cell1);

            nameTable2.setSpacingBefore(15f);

            myPdfReport.add(nameTable2);



            PdfPTable nameTable = new PdfPTable(3);
            PdfPCell cell = new PdfPCell(new Phrase("", normal));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            cell = new PdfPCell(new Phrase("Generated By GNL Systems IPPMS - "+currentDate+" "+currentTime, boldFont));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setNoWrap(true);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            cell = new PdfPCell(new Phrase("", normal));
            cell.setBorder(Rectangle.BOTTOM);
            cell.setBackgroundColor(baseColor);
            nameTable.addCell(cell);

            nameTable.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*9));
            nameTable.setLockedWidth(true);

            myPdfReport.add(nameTable);

            PdfPTable outerTable = new PdfPTable(1);


            drawTableLogo(rt.getEmployeePayMiniBean(), normal, boldFont, myPdfReport, rt.getBusinessCertificate(), currentDate, outerTable, smallHeader);


            payAndAllowancesTable(rt.getEmployeePayMiniBean(), normal, boldFont, myPdfReport, rt.getBusinessCertificate(), outerTable, baseColor, italic);

            //adding table headers

            // PdfPTable new_Table = null;
            // Boolean addOne;

            onEndPage(pdfwriter, myPdfReport, rt.getWatermark(), rt.getBusinessCertificate());

            myPdfReport.close();

            FileInputStream baos = new FileInputStream(fileLocation);

            response.setHeader("Expires", "0");
            response.setHeader("Cache-Control", "must-revalidate, post-check=0, pre-check=0");
            response.setHeader("Pragma", "public");
            response.setContentType("application/pdf");
            response.setHeader("Content-Disposition", "attachment; filename=" + rt.getReportTitle() + ".pdf");

            if (IppmsUtils.isNull(rt.isOutputInd()) || rt.isOutputInd()) {
                OutputStream os  = response.getOutputStream();
                byte[] buffer = new byte[8192];
                int bytesRead;

                while ((bytesRead = baos.read(buffer)) != -1) {
                    os.write(buffer, 0, bytesRead);
                }


                try {
                    os.close();
                } catch (Exception wEx) {
                    wEx.printStackTrace();
                }
            }
        } catch(IOException | DocumentException ex){
            ex.printStackTrace();
        }



    }

    private void addSheetTitle(EmployeePayMiniBean empPayMini, Font boldFont, Document myPdfReport, BusinessCertificate businessCertificate, PdfPTable tab) throws DocumentException {
        PdfPTable table = new PdfPTable(3);


        PdfPCell cell = new PdfPCell(new Phrase(empPayMini.getEmployeeName()+"'s PaySlip", boldFont));
        cell.setBorder(Rectangle.NO_BORDER);
        cell.setNoWrap(true);
        cell.setHorizontalAlignment(Element.ALIGN_LEFT);
        table.addCell(cell);

        cell = new PdfPCell(new Phrase(""));
        cell.setBorder(Rectangle.NO_BORDER);
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        cell = new PdfPCell(new Phrase("Pay Period: "+empPayMini.getPayPeriod(), boldFont));
        cell.setBorder(Rectangle.NO_BORDER);
        cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(cell);

        table.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*9));
        table.setLockedWidth(true);

        PdfPCell cellOuter = new PdfPCell();
        cellOuter.setBorder(Rectangle.NO_BORDER);
        cellOuter.addElement(table);

        tab.addCell(cellOuter);
    }

    private void drawTableLogo(EmployeePayMiniBean empPayMini, Font normal, Font boldFont, Document myPdfReport,
                               BusinessCertificate bc, LocalDate cDate, PdfPTable outerTable, Font smallHeader) throws IOException, DocumentException {

        PdfPTable table = new PdfPTable(3);
        BaseColor baseColor = new BaseColor(206, 246 ,245);

        File imgDir = ResourceUtils.getFile("classpath:static/images/coatOfArms.png");
        String imgPath = imgDir.getAbsolutePath();
        Image img2 = Image.getInstance(imgPath);
        img2.scaleToFit(25, 25);
        img2.setAlignment(Element.ALIGN_CENTER);

        PdfPCell table_cell = new PdfPCell(new Phrase("", normal));
        table_cell.setBorder(Rectangle.LEFT);
        table_cell.setBorderColor(baseColor);
        table_cell.setBackgroundColor(baseColor);
        table.addCell(table_cell);

        table_cell = new PdfPCell();
        table_cell.setBorder(Rectangle.NO_BORDER);
        table_cell.setBackgroundColor(baseColor);
        table_cell.addElement(img2);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("", normal));
        table_cell.setBorder(Rectangle.RIGHT);
        table_cell.setBorderColor(baseColor);
        table_cell.setBackgroundColor(baseColor);
        table_cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell);

        PdfPCell table_cell0 = new PdfPCell(new Phrase(empPayMini.getEmployerName(), normal));
        table_cell0.setBorder(Rectangle.LEFT);
        table_cell0.setBorderColor(baseColor);
        table_cell0.setBackgroundColor(baseColor);
        table.addCell(table_cell0);

        table_cell0 = new PdfPCell(new Phrase(empPayMini.getMda(), smallHeader));
        table_cell0.setBorder(Rectangle.NO_BORDER);
        table_cell0.setBackgroundColor(baseColor);
        table_cell0.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(table_cell0);

        table_cell0 = new PdfPCell(new Phrase("Date: "+cDate+"", boldFont));
        table_cell0.setBorder(Rectangle.RIGHT);
        table_cell0.setBorderColor(baseColor);
        table_cell0.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell0.setBackgroundColor(baseColor);
        table.addCell(table_cell0);

        PdfPCell table_cell2 = new PdfPCell(new Phrase(empPayMini.getEmployerAddress(), normal));
        table_cell2.setBorder(Rectangle.LEFT);
        table_cell2.setBorderColor(baseColor);
        table_cell2.setBackgroundColor(baseColor);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase(empPayMini.getPaycheckStatus(), smallHeader));
        table_cell2.setBorder(Rectangle.NO_BORDER);
        table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
        table_cell2.setBackgroundColor(baseColor);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase("", normal));
        table_cell2.setBorder(Rectangle.RIGHT);
        table_cell2.setBorderColor(baseColor);
        table_cell2.setBackgroundColor(baseColor);
        table.addCell(table_cell2);

        PdfPCell table_cell3 = new PdfPCell(new Phrase(empPayMini.getEmployerCityStateZip(), normal));
        table_cell3.setBorder(Rectangle.LEFT);
        table_cell3.setBorderColor(baseColor);
        table_cell3.setBackgroundColor(baseColor);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("", normal));
        table_cell3.setBorder(Rectangle.NO_BORDER);
        table_cell3.setHorizontalAlignment(Element.ALIGN_CENTER);
        table_cell3.setBackgroundColor(baseColor);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("", normal));
        table_cell3.setBorder(Rectangle.RIGHT);
        table_cell3.setBorderColor(baseColor);
        table_cell3.setBackgroundColor(baseColor);
        table.addCell(table_cell3);


        Image img;
        if(empPayMini.isPiksoPresent()) {
            byte [] base64EncodedImage = Base64.decodeBase64(empPayMini.getEmployeePikso());
            img = Image.getInstance(base64EncodedImage);
        }
        else{

            File imgDir2 =  ResourceUtils.getFile("classpath:static/images/avatar.png");
            String imgPath2 = imgDir2.getAbsolutePath();
            img = Image.getInstance(imgPath2);
        }
        img.scaleToFit(45, 60);
        img.setAlignment(Element.ALIGN_LEFT);

        PdfPCell table_cell4 = new PdfPCell();
        table_cell4.setBorder(Rectangle.LEFT);
        table_cell4.setBorderColor(BaseColor.WHITE);
        table_cell4.setBorderWidth(1);
        table_cell4.setBackgroundColor(baseColor);
        table_cell4.addElement(img);
        table_cell4.setHorizontalAlignment(Element.ALIGN_LEFT);
        table.addCell(table_cell4);

        table_cell4 = new PdfPCell(new Phrase("   ", normal));
        table_cell4.setBorder(Rectangle.NO_BORDER);
        table_cell4.setBackgroundColor(baseColor);
        table.addCell(table_cell4);

        table_cell4 = new PdfPCell(new Phrase("", normal));
        table_cell4.setBorder(Rectangle.RIGHT);
        table_cell4.setBorderColor(baseColor);
        table_cell4.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell4.setBackgroundColor(baseColor);
        table.addCell(table_cell4);



        PdfPCell table_cell5 = new PdfPCell(new Phrase(empPayMini.getEmployeeName(), boldFont));
        table_cell5.setBorder(Rectangle.LEFT);
        table_cell5.setBorderColor(baseColor);
        table_cell5.setBackgroundColor(baseColor);
        table.addCell(table_cell5);

        table_cell5 = new PdfPCell(new Phrase("", normal));
        table_cell5.setBorder(Rectangle.NO_BORDER);
        table_cell0.setBorderColor(baseColor);
        table_cell5.setBackgroundColor(baseColor);
        table.addCell(table_cell5);

        table_cell5 = new PdfPCell(new Phrase("Net Pay: "+empPayMini.getCurrentNetPayStr(), boldFont));
        table_cell5.setBorder(Rectangle.RIGHT);
        table_cell5.setBorderColor(baseColor);
        table_cell5.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell5.setBackgroundColor(baseColor);
        table.addCell(table_cell5);

        PdfPCell table_cell6 = new PdfPCell(new Phrase(empPayMini.getEmployeeId(), boldFont));
        table_cell6.setBorder(Rectangle.LEFT);
        table_cell6.setBorderColor(baseColor);
        table_cell6.setBackgroundColor(baseColor);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase("", normal));
        table_cell6.setBorder(Rectangle.NO_BORDER);
        table_cell6.setBackgroundColor(baseColor);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase("", normal));
        table_cell6.setBorder(Rectangle.RIGHT);
        table_cell6.setBorderColor(baseColor);
        table_cell6.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell6.setBackgroundColor(baseColor);
        table.addCell(table_cell6);


        PdfPCell table_cell7 = new PdfPCell(new Phrase(empPayMini.getEmployeeAddress(), normal));
        table_cell7.setBorder(Rectangle.LEFT);
        table_cell7.setBorderColor(baseColor);
        table_cell7.setBackgroundColor(baseColor);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("", normal));
        table_cell7.setBorder(Rectangle.NO_BORDER);
        table_cell7.setBackgroundColor(baseColor);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("", normal));
        table_cell7.setBorder(Rectangle.RIGHT);
        table_cell7.setBorderColor(baseColor);
        table_cell7.setBackgroundColor(baseColor);
        table.addCell(table_cell7);


        PdfPCell table_cell8 = new PdfPCell(new Phrase(empPayMini.getEmployeeCityStateZip(), normal));
        table_cell8.setBorder(Rectangle.LEFT);
        table_cell8.setBorderColor(baseColor);
        table_cell8.setBackgroundColor(baseColor);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase("", normal));
        table_cell8.setBorder(Rectangle.NO_BORDER);
        table_cell8.setBackgroundColor(baseColor);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase("", normal));
        table_cell8.setBorder(Rectangle.RIGHT);
        table_cell8.setBorderColor(baseColor);
        table_cell8.setBackgroundColor(baseColor);
        table.addCell(table_cell8);


        if(empPayMini.isShowRetireDate()) {
            PdfPCell table_cell18 = new PdfPCell(new Phrase(empPayMini.getExpectedRetirementDate(), normal));
            table_cell18.setBorder(Rectangle.LEFT);
            table_cell18.setBorderColor(baseColor);
            table_cell18.setBackgroundColor(baseColor);
            table.addCell(table_cell18);

            table_cell18 = new PdfPCell(new Phrase("", normal));
            table_cell18.setBorder(Rectangle.NO_BORDER);
            table_cell18.setBackgroundColor(baseColor);
            table.addCell(table_cell18);

            table_cell18 = new PdfPCell(new Phrase("", normal));
            table_cell18.setBorder(Rectangle.RIGHT);
            table_cell18.setBorderColor(baseColor);
            table_cell18.setBackgroundColor(baseColor);
            table.addCell(table_cell18);
        }


        PdfPCell table_cell9 = new PdfPCell(new Phrase("  ", normal));
        table_cell9.setBorder(Rectangle.LEFT);
        table_cell9.setBorderColor(baseColor);
        table_cell9.setBackgroundColor(baseColor);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase("  ", normal));
        table_cell9.setBorder(Rectangle.NO_BORDER);
        table_cell9.setBackgroundColor(baseColor);
        table.addCell(table_cell9);

        if(empPayMini.isShowBank()) {
            table_cell9 = new PdfPCell(new Phrase(empPayMini.getBankBranchName(), normal));
        }
        else{
            table_cell9 = new PdfPCell(new Phrase(sixSpaces, normal));
        }
        table_cell9.setBorder(Rectangle.RIGHT);
        table_cell9.setBorderColor(baseColor);
        table_cell9.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell9.setBackgroundColor(baseColor);
        table.addCell(table_cell9);

        PdfPCell table_cell10 = new PdfPCell(new Phrase(   "   ", normal));
        table_cell10.setBorder(Rectangle.LEFT);
        table_cell10.setBorderColor(baseColor);
        table_cell10.setBackgroundColor(baseColor);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase("      ", normal));
        table_cell10.setBorder(Rectangle.NO_BORDER);
        table_cell10.setBackgroundColor(baseColor);
        table.addCell(table_cell10);

        if(empPayMini.isShowBank()) {
            table_cell10 = new PdfPCell(new Phrase(empPayMini.getAccountNumber(), normal));
        }
        else{
            table_cell10 = new PdfPCell(new Phrase(sixSpaces, normal));
        }
        table_cell10.setBorder(Rectangle.RIGHT);
        table_cell10.setBorderColor(baseColor);
        table_cell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell10.setBackgroundColor(baseColor);
        table.addCell(table_cell10);

        Paragraph space = new Paragraph("    ");
        myPdfReport.add(space);
        myPdfReport.add(new Paragraph("\n"));

        PdfPCell table_cell11;

        table_cell11 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell11.setBorder(Rectangle.LEFT | Rectangle.BOTTOM);
        table_cell11.setBorderColor(baseColor);
        table_cell11.setBackgroundColor(baseColor);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell11.setBorder(Rectangle.BOTTOM);
        table_cell11.setBorderColor(baseColor);
        table_cell11.setBackgroundColor(baseColor);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell11.setBorder(Rectangle.BOTTOM | Rectangle.RIGHT);
        table_cell11.setBorderColor(baseColor);
        table_cell11.setBackgroundColor(baseColor);
        table.addCell(table_cell11);

        table.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*10));
        table.setLockedWidth(true);


        PdfPCell biggerCell = new PdfPCell();
         biggerCell.setBorder(Rectangle.NO_BORDER);
        biggerCell.setCellEvent(new SpecialRoundedCell());
         biggerCell.setPaddingTop(3);
        biggerCell.setPaddingBottom(3);

        biggerCell.addElement(table);

        outerTable.addCell(biggerCell);

    }

    private void payAndAllowancesTable(EmployeePayMiniBean empPayMini, Font normal, Font bold, Document myPdfReport, BusinessCertificate bc,
                                       PdfPTable outerTable, BaseColor baseColor, Font italic) throws DocumentException {

        float[] columnWidth = {8, 4, 4, 4, 4, 2, 4, 4, 4};
        PdfPTable reportTable = new PdfPTable(columnWidth);
        PdfPTable table = new PdfPTable(columnWidth);



        PdfPCell table_cell = new PdfPCell(new Phrase("PAY GROUP", bold));
        table_cell.setBorder(Rectangle.LEFT | Rectangle.TOP);
        table_cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("Level/Step", bold));
        table_cell.setBorder(Rectangle.TOP);
        table_cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("Basic Salary", bold));
        table_cell.setBorder(Rectangle.TOP);
        table_cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("Gross Pay", bold));
        table_cell.setBorder(Rectangle.TOP);
        table_cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("YTD", bold));
        table_cell.setBorder(Rectangle.TOP | Rectangle.RIGHT);
        table_cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("  ", normal));
        table_cell.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("TAXES WITHHELD", bold));
        table_cell.setBorder(Rectangle.TOP | Rectangle.LEFT);
        table_cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("Current", bold));
        table_cell.setBorder(Rectangle.TOP);
        table_cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell);

        table_cell = new PdfPCell(new Phrase("YTD", bold));
        table_cell.setBorder(Rectangle.TOP | Rectangle.RIGHT);
        table_cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell);


        PdfPCell table_cell2 = new PdfPCell(new Phrase(empPayMini.getPayType(), normal));
        table_cell2.setBorder(Rectangle.LEFT | Rectangle.BOTTOM);
        table_cell2.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase(empPayMini.getLevelAndStep(), normal));
        table_cell2.setBorder(Rectangle.BOTTOM);
        table_cell2.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase(empPayMini.getBasicSalaryStr(), normal));
        table_cell2.setBorder(Rectangle.BOTTOM);
        table_cell2.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase(empPayMini.getCurrentTotalPayStr(), normal));
        table_cell2.setBorder(Rectangle.BOTTOM);
        table_cell2.setBackgroundColor(BaseColor.WHITE);
        table_cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase(empPayMini.getSalaryYTDStr(), normal));
        table_cell2.setBorder(Rectangle.RIGHT | Rectangle.BOTTOM);
        table_cell2.setBackgroundColor(BaseColor.WHITE);
        table_cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase("", normal));
        table_cell2.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase("Income Tax", bold));
        table_cell2.setBorder(Rectangle.LEFT | Rectangle.BOTTOM);
        table_cell2.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase((empPayMini.getCurrentTaxesPaidStr()), normal));
        table_cell2.setBorder(Rectangle.BOTTOM);
        table_cell2.setBackgroundColor(BaseColor.WHITE);
        table_cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell2);

        table_cell2 = new PdfPCell(new Phrase(empPayMini.getTaxesPaidYTDStr(), normal));
        table_cell2.setBorder(Rectangle.BOTTOM | Rectangle.RIGHT);
        table_cell2.setBackgroundColor(BaseColor.WHITE);
        table_cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell2);




        PdfPCell table_cell22 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table_cell22.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell22);

        table_cell22 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table_cell22.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell22);

        table_cell22 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table_cell22.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell22);

        table_cell22 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table_cell22.setBackgroundColor(BaseColor.WHITE);
        table_cell22.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell22);

        table_cell22 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table_cell22.setBackgroundColor(BaseColor.WHITE);
        table_cell22.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell22);

        table_cell22 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell22);

        table_cell22 = new PdfPCell(new Phrase(sixSpaces, bold));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table_cell22.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell22);

        table_cell22 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table_cell22.setBackgroundColor(BaseColor.WHITE);
        table_cell22.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell22);

        table_cell22 = new PdfPCell(new Phrase(sixSpaces, normal));
        table_cell22.setBorder(Rectangle.NO_BORDER);
        table_cell22.setBackgroundColor(BaseColor.WHITE);
        table_cell22.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell22);







        PdfPCell table_cell3 = new PdfPCell(new Phrase("Allowances", bold));
        table_cell3.setBorder(Rectangle.LEFT | Rectangle.TOP);
        table_cell3.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("", normal));
        table_cell3.setBorder(Rectangle.TOP);
        table_cell3.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("", bold));
        table_cell3.setBorder(Rectangle.TOP);
        table_cell3.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("Current", bold));
        table_cell3.setBorder(Rectangle.TOP);
        table_cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell3.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("YTD", bold));
        table_cell3.setBorder(Rectangle.TOP | Rectangle.RIGHT);
        table_cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell3.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell3);


        table_cell3 = new PdfPCell(new Phrase("", bold));
        table_cell3.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("", bold));
        table_cell3.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("", bold));
        table_cell3.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell3);

        table_cell3 = new PdfPCell(new Phrase("", bold));
        table_cell3.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell3);


        PdfPCell table_cell4;
        int i = 1;
        for(EmpDeductMiniBean edmb : empPayMini.getMandList()){
            i++;

            table_cell4 = new PdfPCell(new Phrase(edmb.getName(), normal));
            table_cell4.setBorder(Rectangle.LEFT);
            if(i%2 != 0) {
                table_cell4.setBackgroundColor(baseColor);
            }
            else{
                table_cell4.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell4);

            table_cell4 = new PdfPCell(new Phrase("", normal));
            table_cell4.setBorder(Rectangle.NO_BORDER);
            if(i%2 != 0) {
                table_cell4.setBackgroundColor(baseColor);
            }
            else{
                table_cell4.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell4);

            table_cell4 = new PdfPCell(new Phrase("", normal));
            table_cell4.setBorder(Rectangle.NO_BORDER);
            if(i%2 != 0) {
                table_cell4.setBackgroundColor(baseColor);
            }
            else{
                table_cell4.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell4);

            table_cell4 = new PdfPCell(new Phrase(edmb.getCurrentDeductionStr(), normal));
            table_cell4.setBorder(Rectangle.NO_BORDER);
            if(i%2 != 0) {
                table_cell4.setBackgroundColor(baseColor);
            }
            else{
                table_cell4.setBackgroundColor(BaseColor.WHITE);
            }
            table_cell4.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(table_cell4);

            table_cell4 = new PdfPCell(new Phrase(edmb.getYearToDateStr(), normal));
            table_cell4.setBorder(Rectangle.RIGHT);
            if(i%2 != 0) {
                table_cell4.setBackgroundColor(baseColor);
            }
            else{
                table_cell4.setBackgroundColor(BaseColor.WHITE);
            }
            table_cell4.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(table_cell4);

            table_cell4 = new PdfPCell(new Phrase("", normal));
            table_cell4.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell4);

            table_cell4 = new PdfPCell(new Phrase("", normal));
            table_cell4.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell4);

            table_cell4 = new PdfPCell(new Phrase("", normal));
            table_cell4.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell4);

            table_cell4 = new PdfPCell(new Phrase("", normal));
            table_cell4.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell4);
        }



        PdfPCell table_cell6;
        table_cell6 = new PdfPCell(new Phrase("Total", bold));
        table_cell6.setBorder(Rectangle.LEFT | Rectangle.BOTTOM);
        table_cell6.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell6);


        table_cell6 = new PdfPCell(new Phrase("", bold));
        table_cell6.setBorder(Rectangle.BOTTOM);
        table_cell6.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase("", bold));
        table_cell6.setBorder(Rectangle.BOTTOM);
        table_cell6.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase(empPayMini.getCurrentAllowanceTotalStr(), bold));
        table_cell6.setBorder(Rectangle.BOTTOM);
        table_cell6.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell6.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase(empPayMini.getAllowanceTotalStr(), bold));
        table_cell6.setBorder(Rectangle.BOTTOM | Rectangle.RIGHT);
        table_cell6.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell6.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase("", bold));
        table_cell6.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase("", bold));
        table_cell6.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase("", bold));
        table_cell6.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell6);

        table_cell6 = new PdfPCell(new Phrase("", bold));
        table_cell6.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell6);



        PdfPCell table_cell7;
        table_cell7 = new PdfPCell(new Phrase("", bold));
        table_cell7.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("", bold));
        table_cell7.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("", bold));
        table_cell7.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("", bold));
        table_cell7.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("", bold));
        table_cell7.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("", bold));
        table_cell7.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("SUMMARY", bold));
        table_cell7.setBorder(Rectangle.TOP | Rectangle.LEFT);
        table_cell7.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("Current", bold));
        table_cell7.setBorder(Rectangle.TOP);
        table_cell7.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell7.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell7);

        table_cell7 = new PdfPCell(new Phrase("YTD", bold));
        table_cell7.setBorder(Rectangle.TOP | Rectangle.RIGHT);
        table_cell7.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell7.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell7);


        PdfPCell table_cell8;

        table_cell8 = new PdfPCell(new Phrase("", normal));
        table_cell8.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase("", normal));
        table_cell8.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase("", normal));
        table_cell8.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase("", normal));
        table_cell8.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase("", normal));
        table_cell8.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase("", normal));
        table_cell8.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase("Total Pay", normal));
        table_cell8.setBorder(Rectangle.LEFT);
        table_cell8.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase(empPayMini.getCurrentTotalPayStr(), normal));
        table_cell8.setBorder(Rectangle.NO_BORDER);
        table_cell8.setBackgroundColor(BaseColor.WHITE);
        table_cell8.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell8);

        table_cell8 = new PdfPCell(new Phrase(empPayMini.getSalaryYTDStr(), normal));
        table_cell8.setBorder(Rectangle.RIGHT);
        table_cell8.setBackgroundColor(BaseColor.WHITE);
        table_cell8.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell8);



        PdfPCell table_cell9;

        table_cell9 = new PdfPCell(new Phrase("", normal));
        table_cell9.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase("", normal));
        table_cell9.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase("", normal));
        table_cell9.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase("", normal));
        table_cell9.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase("", normal));
        table_cell9.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase("", normal));
        table_cell9.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase("Deductions", normal));
        table_cell9.setBorder(Rectangle.LEFT);
        table_cell9.setBackgroundColor(baseColor);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase(empPayMini.getCurrentGarnTotalStr(), normal));
        table_cell9.setBorder(Rectangle.NO_BORDER);
        table_cell9.setBackgroundColor(baseColor);
        table_cell9.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell9);

        table_cell9 = new PdfPCell(new Phrase(empPayMini.getGarnishmentTotalStr(), normal));
        table_cell9.setBorder(Rectangle.RIGHT);
        table_cell9.setBackgroundColor(baseColor);
        table_cell9.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell9);


        PdfPCell table_cell10;
        table_cell10 = new PdfPCell(new Phrase("", normal));
        table_cell10.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase("", normal));
        table_cell10.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase("", normal));
        table_cell10.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase("", normal));
        table_cell10.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase("", normal));
        table_cell10.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase("", normal));
        table_cell10.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase("Income Tax", normal));
        table_cell10.setBorder(Rectangle.LEFT);
        table_cell10.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase(empPayMini.getCurrentTaxesPaidStr(), normal));
        table_cell10.setBorder(Rectangle.NO_BORDER);
        table_cell10.setBackgroundColor(BaseColor.WHITE);
        table_cell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell10);

        table_cell10 = new PdfPCell(new Phrase(empPayMini.getTaxesPaidYTDStr(), normal));
        table_cell10.setBorder(Rectangle.RIGHT);
        table_cell10.setBackgroundColor(BaseColor.WHITE);
        table_cell10.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table.addCell(table_cell10);


        PdfPCell table_cell20;
        table_cell20 = new PdfPCell(new Phrase("", normal));
        table_cell20.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell20);

        table_cell20 = new PdfPCell(new Phrase("", normal));
        table_cell20.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell20);

        table_cell20 = new PdfPCell(new Phrase("", normal));
        table_cell20.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell20);

        table_cell20 = new PdfPCell(new Phrase("", normal));
        table_cell20.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell20);

        table_cell20 = new PdfPCell(new Phrase("", normal));
        table_cell20.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell20);

        table_cell20 = new PdfPCell(new Phrase("", normal));
        table_cell20.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell20);

        table_cell20 = new PdfPCell(new Phrase("", normal));
        table_cell20.setBorder(Rectangle.LEFT | Rectangle.BOTTOM);
        table_cell20.setBackgroundColor(BaseColor.WHITE);
        table.addCell(table_cell20);

        table_cell20 = new PdfPCell(new Phrase("Net This Check:", normal));
        table_cell20.setBorder(Rectangle.BOTTOM);
        table_cell20.setHorizontalAlignment(Element.ALIGN_CENTER);
        table_cell20.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell20);

        table_cell20 = new PdfPCell(new Phrase(empPayMini.getCurrentNetPayStr(), normal));
        table_cell20.setBorder(Rectangle.BOTTOM | Rectangle.RIGHT);
        table_cell20.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell20.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell20);


        PdfPCell table_cell11;

        table_cell11 = new PdfPCell(new Phrase("Deductions", bold));
        table_cell11.setBorder(Rectangle.LEFT | Rectangle.TOP);
        table_cell11.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase("", normal));
        table_cell11.setBorder(Rectangle.TOP);
        table_cell11.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase("", normal));
        table_cell11.setBorder(Rectangle.TOP);
        table_cell11.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase("Current", normal));
        table_cell11.setBorder(Rectangle.TOP);
        table_cell11.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell11.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase("YTD", normal));
        table_cell11.setBorder(Rectangle.TOP | Rectangle.RIGHT);
        table_cell11.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell11.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase("", normal));
        table_cell11.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase("", normal));
        table_cell11.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase("", normal));
        table_cell11.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell11);

        table_cell11 = new PdfPCell(new Phrase("", normal));
        table_cell11.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell11);


        PdfPCell table_cell12;
        int a=1;
        for(EmpDeductMiniBean emp : empPayMini.getDeductList()) {
            a++;

            table_cell12 = new PdfPCell(new Phrase(emp.getName(), normal));
            table_cell12.setBorder(Rectangle.LEFT);
            if(a%2 != 0) {
                table_cell12.setBackgroundColor(baseColor);
            }
            else{
                table_cell12.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell12);

            table_cell12 = new PdfPCell(new Phrase("", bold));
            table_cell12.setBorder(Rectangle.NO_BORDER);
            if(a%2 != 0) {
                table_cell12.setBackgroundColor(baseColor);
            }
            else{
                table_cell12.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell12);

            table_cell12 = new PdfPCell(new Phrase("", bold));
            table_cell12.setBorder(Rectangle.NO_BORDER);
            if(a%2 != 0) {
                table_cell12.setBackgroundColor(baseColor);
            }
            else{
                table_cell12.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell12);

            table_cell12 = new PdfPCell(new Phrase(emp.getCurrentDeductionStr(), normal));
            table_cell12.setBorder(Rectangle.NO_BORDER);
            if(a%2 != 0) {
                table_cell12.setBackgroundColor(baseColor);
            }
            else{
                table_cell12.setBackgroundColor(BaseColor.WHITE);
            }
            table_cell12.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(table_cell12);

            table_cell12 = new PdfPCell(new Phrase(emp.getYearToDateStr(), normal));
            table_cell12.setBorder(Rectangle.RIGHT);
            if(a%2 != 0) {
                table_cell12.setBackgroundColor(baseColor);
            }
            else{
                table_cell12.setBackgroundColor(BaseColor.WHITE);
            }
            table_cell12.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(table_cell12);

            table_cell12 = new PdfPCell(new Phrase("", bold));
            table_cell12.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell12);

            table_cell12 = new PdfPCell(new Phrase("", bold));
            table_cell12.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell12);

            table_cell12 = new PdfPCell(new Phrase("", bold));
            table_cell12.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell12);

            table_cell12 = new PdfPCell(new Phrase("", bold));
            table_cell12.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell12);
        }

        PdfPCell table_cell13;
        int b = 1;
        for(EmpDeductMiniBean emp : empPayMini.getPensionsContList()) {
            b++;

            table_cell13 = new PdfPCell(new Phrase(emp.getName(), normal));
            table_cell13.setBorder(Rectangle.LEFT);
            if(b%2 != 0) {
                table_cell13.setBackgroundColor(baseColor);
            }
            else{
                table_cell13.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell13);

            table_cell13 = new PdfPCell(new Phrase("", bold));
            table_cell13.setBorder(Rectangle.NO_BORDER);
            if(b%2 != 0) {
                table_cell13.setBackgroundColor(baseColor);
            }
            else{
                table_cell13.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell13);

            table_cell13 = new PdfPCell(new Phrase("", bold));
            table_cell13.setBorder(Rectangle.NO_BORDER);
            if(b%2 != 0) {
                table_cell13.setBackgroundColor(baseColor);
            }
            else{
                table_cell13.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell13);

            table_cell13 = new PdfPCell(new Phrase(emp.getCurrentDeductionStr(), normal));
            table_cell13.setBorder(Rectangle.NO_BORDER);
            if(b%2 != 0) {
                table_cell13.setBackgroundColor(baseColor);
            }
            else{
                table_cell13.setBackgroundColor(BaseColor.WHITE);
            }
            table_cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(table_cell13);

            table_cell13 = new PdfPCell(new Phrase(emp.getYearToDateStr(), normal));
            table_cell13.setBorder(Rectangle.RIGHT);
            if(b%2 != 0) {
                table_cell13.setBackgroundColor(baseColor);
            }
            else{
                table_cell13.setBackgroundColor(BaseColor.WHITE);
            }
            table_cell13.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(table_cell13);

            table_cell13 = new PdfPCell(new Phrase("", bold));
            table_cell13.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell13);

            table_cell13 = new PdfPCell(new Phrase("", bold));
            table_cell13.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell13);

            table_cell13 = new PdfPCell(new Phrase("", bold));
            table_cell13.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell13);

            table_cell13 = new PdfPCell(new Phrase("", bold));
            table_cell13.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell13);
        }

        PdfPCell table_cell14;
        int c = 1;
        for(EmpGarnMiniBean emp : empPayMini.getGarnList()) {
            c++;

            table_cell14 = new PdfPCell(new Phrase(emp.getName(), normal));
            table_cell14.setBorder(Rectangle.LEFT);
            if(c%2 != 0) {
                table_cell14.setBackgroundColor(baseColor);
            }
            else{
                table_cell14.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell14);

            table_cell14 = new PdfPCell(new Phrase("", bold));
            table_cell14.setBorder(Rectangle.NO_BORDER);
            if(c%2 != 0) {
                table_cell14.setBackgroundColor(baseColor);
            }
            else{
                table_cell14.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell14);

            table_cell14 = new PdfPCell(new Phrase("", bold));
            table_cell14.setBorder(Rectangle.NO_BORDER);
            if(c%2 != 0) {
                table_cell14.setBackgroundColor(baseColor);
            }
            else{
                table_cell14.setBackgroundColor(BaseColor.WHITE);
            }
            table.addCell(table_cell14);

            table_cell14 = new PdfPCell(new Phrase(emp.getCurrentGarnishmentStr(), normal));
            table_cell14.setBorder(Rectangle.NO_BORDER);
            if(c%2 != 0) {
                table_cell14.setBackgroundColor(baseColor);
            }
            else{
                table_cell14.setBackgroundColor(BaseColor.WHITE);
            }
            table_cell14.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(table_cell14);

            table_cell14 = new PdfPCell(new Phrase(emp.getYearToDateStr(), normal));
            table_cell14.setBorder(Rectangle.RIGHT);
            if(c%2 != 0) {
                table_cell14.setBackgroundColor(baseColor);
            }
            else{
                table_cell14.setBackgroundColor(BaseColor.WHITE);
            }
            table_cell14.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(table_cell14);

            table_cell14 = new PdfPCell(new Phrase("", bold));
            table_cell14.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell14);

            table_cell14 = new PdfPCell(new Phrase("", bold));
            table_cell14.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell14);
            table_cell14 = new PdfPCell(new Phrase("", bold));
            table_cell14.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell14);

            table_cell14 = new PdfPCell(new Phrase("", bold));
            table_cell14.setBorder(Rectangle.NO_BORDER);
            table.addCell(table_cell14);
        }

        PdfPCell table_cell15;

        table_cell15 = new PdfPCell(new Phrase("Total", bold));
        table_cell15.setBorder(Rectangle.LEFT | Rectangle.BOTTOM);
        table_cell15.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell15);

        table_cell15 = new PdfPCell(new Phrase("", bold));
        table_cell15.setBorder(Rectangle.BOTTOM);
        table_cell15.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell15);

        table_cell15 = new PdfPCell(new Phrase("", bold));
        table_cell15.setBorder(Rectangle.BOTTOM);
        table_cell15.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell15);

        table_cell15 = new PdfPCell(new Phrase(empPayMini.getCurrentGarnTotalStr(), bold));
        table_cell15.setBorder(Rectangle.BOTTOM);
        table_cell15.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell15.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell15);

        table_cell15 = new PdfPCell(new Phrase(empPayMini.getGarnishmentTotalStr(), bold));
        table_cell15.setBorder(Rectangle.BOTTOM | Rectangle.RIGHT);
        table_cell15.setHorizontalAlignment(Element.ALIGN_RIGHT);
        table_cell15.setBackgroundColor(BaseColor.LIGHT_GRAY);
        table.addCell(table_cell15);

        table_cell15 = new PdfPCell(new Phrase("", bold));
        table_cell15.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell15);

        table_cell15 = new PdfPCell(new Phrase("", bold));
        table_cell15.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell15);

        table_cell15 = new PdfPCell(new Phrase("", bold));
        table_cell15.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell15);

        table_cell15 = new PdfPCell(new Phrase("", bold));
        table_cell15.setBorder(Rectangle.NO_BORDER);
        table.addCell(table_cell15);

        PdfPCell innerCell = new PdfPCell();
        innerCell.addElement(table);
        innerCell.setPaddingBottom(5);
        innerCell.setBorder(Rectangle.NO_BORDER);
//        innerCell.setBackgroundColor(BaseColor.WHITE);

        table.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*10));
        table.setLockedWidth(true);

        outerTable.addCell(innerCell);
        outerTable.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*9));
        outerTable.setLockedWidth(true);

        PdfPCell cell = new PdfPCell();
        cell.setBackgroundColor(BaseColor.WHITE);
        cell.setBorderColor(BaseColor.LIGHT_GRAY);
//        cell.setBorder(5);
        cell.addElement(outerTable);




        PdfPTable tab = new PdfPTable(1);

        addSheetTitle(empPayMini, bold, myPdfReport, bc, tab);


        tab.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.leftMargin()*8));
//        tab.setTotalWidth(PageSize.A4.getWidth()-(myPdfReport.topMargin()*5));
        tab.setLockedWidth(true);
        tab.addCell(cell);
        addInstruction(empPayMini, bold, myPdfReport, bc, tab, italic);

        myPdfReport.add(tab);
    }


    private void addInstruction(EmployeePayMiniBean empPayMini, Font boldFont, Document myPdfReport, BusinessCertificate businessCertificate, PdfPTable tab, Font italic) throws DocumentException {
        PdfPTable table = new PdfPTable(3);

        PdfPCell cell = new PdfPCell();
        for(NamedEntity emp : empPayMini.getInstructionList()) {
            cell = new PdfPCell(new Phrase("**"+emp.getName(), italic));
            cell.setBorder(Rectangle.NO_BORDER);
            cell.setNoWrap(true);
            cell.setHorizontalAlignment(Element.ALIGN_LEFT);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase(sixSpaces, italic));
            cell.setBorder(Rectangle.NO_BORDER);
            cell.setNoWrap(true);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase(sixSpaces, italic));
            cell.setBorder(Rectangle.NO_BORDER);
            cell.setNoWrap(true);
            cell.setHorizontalAlignment(Element.ALIGN_LEFT);
            table.addCell(cell);
        }

        PdfPCell cellOuter = new PdfPCell();
        cellOuter.setBorder(Rectangle.NO_BORDER);
        cellOuter.addElement(table);

        tab.addCell(cellOuter);
    }





    private void onEndPage(PdfWriter writer, Document document, String watermark, BusinessCertificate bc) {
        Font FONT = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, new GrayColor(0.85f));
        ColumnText.showTextAligned(writer.getDirectContent(),
                Element.ALIGN_CENTER, new Phrase(watermark+" "+bc.getBusinessName(), FONT),
                587.5f, 221, 45f);
        ColumnText.showTextAligned(writer.getDirectContent(),
                Element.ALIGN_CENTER, new Phrase(watermark+" "+bc.getBusinessName(), FONT),
                197.5f, 161, 45f);
        ColumnText.showTextAligned(writer.getDirectContent(),
                Element.ALIGN_CENTER, new Phrase(watermark+" "+bc.getBusinessName(), FONT),
                897.5f, 554, 45f);
        ColumnText.showTextAligned(writer.getDirectContent(),
                Element.ALIGN_CENTER, new Phrase(watermark+" "+bc.getBusinessName(), FONT),
                325.5f, 165, 45f);

        ColumnText.showTextAligned(writer.getDirectContentUnder(),
                Element.ALIGN_CENTER, new Phrase(watermark+" "+bc.getBusinessName(), FONT),
                230f, 713, 45f);

        ColumnText.showTextAligned(writer.getDirectContent(),
                Element.ALIGN_CENTER, new Phrase(watermark+" "+bc.getBusinessName(), FONT),
                220f, 613, 45f);

        ColumnText.showTextAligned(writer.getDirectContent(),
                Element.ALIGN_CENTER, new Phrase(watermark+" "+bc.getBusinessName(), FONT),
                200f, 413, 45f);

        ColumnText.showTextAligned(writer.getDirectContent(),
                Element.ALIGN_CENTER, new Phrase(watermark+" "+bc.getBusinessName(), FONT),
                170f, 313, 45f);

    }

    class SpecialRoundedCell implements PdfPCellEvent {
        public void cellLayout(PdfPCell cell, Rectangle position,
                               PdfContentByte[] canvases) {
            PdfContentByte canvas = canvases[PdfPTable.LINECANVAS];
            float llx = position.getLeft() + 2;
            float lly = position.getBottom() + 2;
            float urx = position.getRight() - 2;
            float ury = position.getTop() - 2;
            float r = 4;
            float b = 0.4477f;
            canvas.moveTo(llx, lly);
            canvas.lineTo(urx, lly);
            canvas.lineTo(urx, ury - r);
            canvas.curveTo(urx, ury - r * b, urx - r * b, ury, urx - r, ury);
            canvas.lineTo(llx + r, ury);
            canvas.curveTo(llx + r * b, ury, llx, ury - r * b, llx, ury - r);
            canvas.lineTo(llx, lly);
            canvas.setColorStroke(new BaseColor(170, 223, 222
            ));
            canvas.setLineWidth(2);
            canvas.stroke();
        }
    }


}
